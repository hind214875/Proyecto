{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Tarea3\\\\frontend\\\\src\\\\components\\\\AuthForm.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nconst AuthForm = () => {\n  const navigate = useNavigate();\n  const {\n    signIn\n  } = useAuth();\n  const [isSignIn, setIsSignIn] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nombre, setNombre] = useState(\"\");\n  const [especialidad, setEspecialidad] = useState(\"\");\n  const [tipo, setTipo] = useState(\"user\");\n  const [errorMessages, setErrorMessages] = useState({});\n\n  // Clears the error messages when the form type is toggled\n  const clearErrors = () => setErrorMessages({});\n  const validateForm = () => {\n    let errors = {};\n\n    //email validation\n    if (!email.trim()) {\n      errors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email.trim())) {\n      errors.email = \"Email is invalid\";\n    }\n\n    //password validation\n    if (!password.trim()) {\n      errors.password = \"Password is required\";\n    }\n\n    //  nombre validation for sign up\n    if (!isSignIn) {\n      if (!nombre.trim()) {\n        errors.nombre = \"Name is required\";\n      }\n      if (tipo === \"professional\" && !especialidad.trim()) {\n        errors.especialidad = \"Specialty is required for professionals\";\n      }\n    }\n    setErrorMessages(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleLogin = async () => {\n    if (!validateForm()) return; // Validate before API call\n\n    try {\n      const endpoint = \"http://localhost/Tarea3/backend/src/index.php/login\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"An unknown error occurred\");\n      }\n      if (data && data.error) {\n        setErrorMessages({\n          form: data.message\n        });\n      } else {\n        signIn({\n          ...data,\n          userName: data.nombre\n        });\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setErrorMessages({\n        form: error.toString()\n      });\n    }\n  };\n  const handleRegister = async () => {\n    if (!validateForm()) return; // Validate before API call\n\n    try {\n      const endpoint = tipo === \"professional\" ? \"http://localhost/Tarea3/backend/src/index.php/registerProfessional\" : \"http://localhost/Tarea3/backend/src/index.php/register\";\n      const payload = {\n        nombre,\n        email,\n        password,\n        tipo,\n        ...(tipo === \"professional\" && {\n          especialidad\n        })\n      };\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"An unknown error occurred\");\n      }\n      if (data && data.error) {\n        setErrorMessages({\n          form: data.message\n        });\n      } else {\n        navigate(\"/\"); // Redirect or prompt to sign in\n      }\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      setErrorMessages({\n        form: error.toString()\n      });\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    clearErrors();\n    if (isSignIn) {\n      await handleLogin();\n    } else {\n      await handleRegister();\n    }\n  };\n  const toggleTipo = () => {\n    // This should toggle between 'user' and 'professional'\n    setTipo(prevTipo => prevTipo === \"user\" ? \"professional\" : \"user\");\n    // If toggling to 'user', reset 'especialidad'\n    if (tipo === \"professional\") {\n      setEspecialidad(\"\");\n    }\n  };\n  const toggleMode = () => {\n    // This should toggle between sign in and sign up\n    setIsSignIn(prevIsSignIn => !prevIsSignIn);\n    // Reset fields when toggling mode\n    setEmail(\"\");\n    setPassword(\"\");\n    setNombre(\"\");\n    setEspecialidad(\"\");\n    setTipo(\"user\");\n    setErrorMessages({});\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-form-area ptb-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, !isSignIn && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${errorMessages.nombre ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Nombre\",\n    value: nombre,\n    onChange: e => setNombre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }), errorMessages.nombre && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, errorMessages.nombre)), tipo === \"professional\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${errorMessages.especialidad ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Especialidad\",\n    value: especialidad,\n    onChange: e => setEspecialidad(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), errorMessages.especialidad && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, errorMessages.especialidad))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: `form-control ${errorMessages.email ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), errorMessages.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, errorMessages.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: `form-control ${errorMessages.password ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), errorMessages.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, errorMessages.password)), !isSignIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: tipo === \"professional\",\n    onChange: toggleTipo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }), \"Register as a professional\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn cmn-btn\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cmn-btn\",\n    onClick: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, isSignIn ? \"Need an account? Sign Up\" : \"Have an account? Sign In\")), errorMessages.form && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, errorMessages.form)))), /*#__PURE__*/React.createElement(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, `\n  .is-invalid {\n    border: 2px solid #dc3545;\n  }\n\n  .error-message {\n    color: #dc3545;\n    font-size: 0.875em;\n    margin-top: 0.25rem;\n  }\n`));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","AuthForm","navigate","signIn","isSignIn","setIsSignIn","email","setEmail","password","setPassword","nombre","setNombre","especialidad","setEspecialidad","tipo","setTipo","errorMessages","setErrorMessages","clearErrors","validateForm","errors","trim","test","Object","keys","length","handleLogin","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","error","form","userName","console","toString","handleRegister","payload","handleSubmit","event","preventDefault","toggleTipo","prevTipo","toggleMode","prevIsSignIn","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Fragment","type","placeholder","value","onChange","e","target","checked","style","marginRight","onClick"],"sources":["C:/xampp/htdocs/Tarea3/frontend/src/components/AuthForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst AuthForm = () => {\r\n  const navigate = useNavigate();\r\n  const { signIn } = useAuth();\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [especialidad, setEspecialidad] = useState(\"\");\r\n  const [tipo, setTipo] = useState(\"user\");\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  // Clears the error messages when the form type is toggled\r\n  const clearErrors = () => setErrorMessages({});\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n\r\n    //email validation\r\n    if (!email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email.trim())) {\r\n      errors.email = \"Email is invalid\";\r\n    }\r\n\r\n    //password validation\r\n    if (!password.trim()) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n\r\n    //  nombre validation for sign up\r\n    if (!isSignIn) {\r\n      if (!nombre.trim()) {\r\n        errors.nombre = \"Name is required\";\r\n      }\r\n      if (tipo === \"professional\" && !especialidad.trim()) {\r\n        errors.especialidad = \"Specialty is required for professionals\";\r\n      }\r\n    }\r\n\r\n    setErrorMessages(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!validateForm()) return; // Validate before API call\r\n\r\n    try {\r\n      const endpoint = \"http://localhost/Tarea3/backend/src/index.php/login\";\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"An unknown error occurred\");\r\n      }\r\n\r\n      if (data && data.error) {\r\n        setErrorMessages({ form: data.message });\r\n      } else {\r\n        signIn({ ...data, userName: data.nombre });\r\n        navigate(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      setErrorMessages({ form: error.toString() });\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!validateForm()) return; // Validate before API call\r\n\r\n    try {\r\n      const endpoint =\r\n        tipo === \"professional\"\r\n          ? \"http://localhost/Tarea3/backend/src/index.php/registerProfessional\"\r\n          : \"http://localhost/Tarea3/backend/src/index.php/register\";\r\n\r\n      const payload = {\r\n        nombre,\r\n        email,\r\n        password,\r\n        tipo,\r\n        ...(tipo === \"professional\" && { especialidad }),\r\n      };\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"An unknown error occurred\");\r\n      }\r\n\r\n      if (data && data.error) {\r\n        setErrorMessages({ form: data.message });\r\n      } else {\r\n        navigate(\"/\"); // Redirect or prompt to sign in\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Registration failed:\", error);\r\n      setErrorMessages({ form: error.toString() });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    clearErrors();\r\n\r\n    if (isSignIn) {\r\n      await handleLogin();\r\n    } else {\r\n      await handleRegister();\r\n    }\r\n  };\r\n\r\n  const toggleTipo = () => {\r\n    // This should toggle between 'user' and 'professional'\r\n    setTipo((prevTipo) => (prevTipo === \"user\" ? \"professional\" : \"user\"));\r\n    // If toggling to 'user', reset 'especialidad'\r\n    if (tipo === \"professional\") {\r\n      setEspecialidad(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    // This should toggle between sign in and sign up\r\n    setIsSignIn((prevIsSignIn) => !prevIsSignIn);\r\n    // Reset fields when toggling mode\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setNombre(\"\");\r\n    setEspecialidad(\"\");\r\n    setTipo(\"user\");\r\n    setErrorMessages({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-form-area ptb-100\">\r\n      <div className=\"container\">\r\n        <div className=\"user-item\">\r\n          <h2>{isSignIn ? \"Sign In\" : \"Sign Up\"}</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            {!isSignIn && (\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      errorMessages.nombre ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    placeholder=\"Nombre\"\r\n                    value={nombre}\r\n                    onChange={(e) => setNombre(e.target.value)}\r\n                  />\r\n                  {errorMessages.nombre && (\r\n                    <div className=\"error-message\">{errorMessages.nombre}</div>\r\n                  )}\r\n                </div>\r\n                {tipo === \"professional\" && (\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        errorMessages.especialidad ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Especialidad\"\r\n                      value={especialidad}\r\n                      onChange={(e) => setEspecialidad(e.target.value)}\r\n                    />\r\n                    {errorMessages.especialidad && (\r\n                      <div className=\"error-message\">\r\n                        {errorMessages.especialidad}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className={`form-control ${\r\n                  errorMessages.email ? \"is-invalid\" : \"\"\r\n                }`}\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)} \r\n              />\r\n              {errorMessages.email && (\r\n                <div className=\"error-message\">{errorMessages.email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${\r\n                  errorMessages.password ? \"is-invalid\" : \"\"\r\n                }`}\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {errorMessages.password && (\r\n                <div className=\"error-message\">{errorMessages.password}</div>\r\n              )}\r\n            </div>\r\n            {!isSignIn && (\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={tipo === \"professional\"}\r\n                    onChange={toggleTipo}\r\n                  />\r\n                  Register as a professional\r\n                </label>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn cmn-btn\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                {isSignIn ? \"Sign In\" : \"Sign Up\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn cmn-btn\"\r\n                onClick={toggleMode}\r\n              >\r\n                {isSignIn\r\n                  ? \"Need an account? Sign Up\"\r\n                  : \"Have an account? Sign In\"}\r\n              </button>\r\n            </div>\r\n            {errorMessages.form && (\r\n              <div className=\"error-message text-center\">\r\n                {errorMessages.form}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <style>{`\r\n  .is-invalid {\r\n    border: 2px solid #dc3545;\r\n  }\r\n\r\n  .error-message {\r\n    color: #dc3545;\r\n    font-size: 0.875em;\r\n    margin-top: 0.25rem;\r\n  }\r\n`}</style>\r\n    </div>\r\n  );\r\n};\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}