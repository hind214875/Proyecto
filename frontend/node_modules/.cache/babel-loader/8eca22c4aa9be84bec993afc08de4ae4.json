{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Tarea3\\\\frontend\\\\src\\\\components\\\\AuthForm.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nconst AuthForm = () => {\n  const navigate = useNavigate();\n  const {\n    signIn\n  } = useAuth();\n  const [formState, setFormState] = useState({\n    isSignIn: true,\n    email: \"\",\n    password: \"\",\n    nombre: \"\",\n    especialidad: \"\",\n    tipo: \"usuario\",\n    // Default to 'usuario'\n    errors: {}\n  });\n\n  // Validates form fields\n  const validateFields = fields => {\n    const errors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!fields.email.trim()) errors.email = \"Email is required\";else if (!emailRegex.test(fields.email.trim())) errors.email = \"Email is invalid\";\n    if (!fields.password.trim()) errors.password = \"Password is required\";\n    if (!fields.isSignIn) {\n      if (!fields.nombre.trim()) errors.nombre = \"Name is required\";\n      if (fields.tipo === \"professional\" && !fields.especialidad.trim()) errors.especialidad = \"Specialty is required for professionals\";\n    }\n    return errors;\n  };\n\n  // Handles form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const errors = validateFields(formState);\n    if (Object.keys(errors).length > 0) {\n      setFormState(prevState => ({\n        ...prevState,\n        errors\n      }));\n      return;\n    }\n    const endpoint = formState.isSignIn ? \"http://localhost/Tarea3/backend/src/index.php/login\" : \"http://localhost/Tarea3/backend/src/index.php/register\";\n    const payload = formState.isSignIn ? {\n      email: formState.email,\n      password: formState.password\n    } : {\n      ...formState,\n      especialidad: formState.tipo === \"professional\" ? formState.especialidad : undefined\n    };\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || \"An error occurred\");\n      if (data.error) {\n        setFormState(prevState => ({\n          ...prevState,\n          errors: {\n            form: data.message\n          }\n        }));\n      } else {\n        if (formState.isSignIn) {\n          signIn({\n            ...data,\n            userName: data.nombre\n          });\n          navigate(\"/\");\n        } else {\n          navigate(\"/\");\n        }\n      }\n    } catch (error) {\n      setFormState(prevState => ({\n        ...prevState,\n        errors: {\n          form: error.message\n        }\n      }));\n    }\n  };\n\n  // Updates form state based on input changes\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    const newValue = type === \"checkbox\" ? checked ? \"professional\" : \"usuario\" : value;\n    setFormState(prevState => ({\n      ...prevState,\n      [name]: newValue\n    }));\n  };\n\n  // Toggles sign in/sign up mode\n  const toggleMode = () => {\n    setFormState(prevState => ({\n      ...prevState,\n      isSignIn: !prevState.isSignIn,\n      email: \"\",\n      password: \"\",\n      nombre: \"\",\n      especialidad: \"\",\n      tipo: \"usuario\",\n      errors: {}\n    }));\n  };\n\n  // Renders input fields with error handling\n  const renderInputField = (name, placeholder, type = \"text\") => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: type,\n    className: `form-control ${formState.errors[name] ? \"is-invalid\" : \"\"}`,\n    placeholder: placeholder,\n    value: formState[name],\n    onChange: handleInputChange,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), formState.errors[name] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 34\n    }\n  }, formState.errors[name]));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-form-area ptb-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, formState.isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, !formState.isSignIn && renderInputField(\"nombre\", \"Nombre\"), formState.tipo === \"professional\" && renderInputField(\"especialidad\", \"Especialidad\"), renderInputField(\"email\", \"Email\", \"email\"), renderInputField(\"password\", \"Password\", \"password\"), !formState.isSignIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: formState.tipo === \"professional\",\n    onChange: handleInputChange,\n    name: \"tipo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }), \"Register as a professional\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn cmn-btn\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, formState.isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cmn-btn\",\n    onClick: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, formState.isSignIn ? \"Need an account? Sign Up\" : \"Have an account? Sign In\")), formState.errors.form && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 39\n    }\n  }, formState.errors.form)))));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","AuthForm","navigate","signIn","formState","setFormState","isSignIn","email","password","nombre","especialidad","tipo","errors","validateFields","fields","emailRegex","trim","test","handleSubmit","event","preventDefault","Object","keys","length","prevState","endpoint","payload","undefined","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","error","form","userName","handleInputChange","name","value","type","checked","target","newValue","toggleMode","renderInputField","placeholder","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onSubmit","style","marginRight","onClick"],"sources":["C:/xampp/htdocs/Tarea3/frontend/src/components/AuthForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst AuthForm = () => {\r\n  const navigate = useNavigate();\r\n  const { signIn } = useAuth();\r\n  const [formState, setFormState] = useState({\r\n    isSignIn: true,\r\n    email: \"\",\r\n    password: \"\",\r\n    nombre: \"\",\r\n    especialidad: \"\",\r\n    tipo: \"usuario\",  // Default to 'usuario'\r\n    errors: {},\r\n  });\r\n\r\n  // Validates form fields\r\n  const validateFields = (fields) => {\r\n    const errors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    if (!fields.email.trim()) errors.email = \"Email is required\";\r\n    else if (!emailRegex.test(fields.email.trim())) errors.email = \"Email is invalid\";\r\n\r\n    if (!fields.password.trim()) errors.password = \"Password is required\";\r\n    if (!fields.isSignIn) {\r\n      if (!fields.nombre.trim()) errors.nombre = \"Name is required\";\r\n      if (fields.tipo === \"professional\" && !fields.especialidad.trim()) errors.especialidad = \"Specialty is required for professionals\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  // Handles form submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const errors = validateFields(formState);\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormState(prevState => ({ ...prevState, errors }));\r\n      return;\r\n    }\r\n\r\n    const endpoint = formState.isSignIn ? \"http://localhost/Tarea3/backend/src/index.php/login\" : \"http://localhost/Tarea3/backend/src/index.php/register\";\r\n    const payload = formState.isSignIn ? { email: formState.email, password: formState.password } : { ...formState, especialidad: formState.tipo === \"professional\" ? formState.especialidad : undefined };\r\n\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) throw new Error(data.message || \"An error occurred\");\r\n      if (data.error) {\r\n        setFormState(prevState => ({ ...prevState, errors: { form: data.message } }));\r\n      } else {\r\n        if (formState.isSignIn) {\r\n          signIn({ ...data, userName: data.nombre });\r\n          navigate(\"/\");\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setFormState(prevState => ({ ...prevState, errors: { form: error.message } }));\r\n    }\r\n  };\r\n\r\n  // Updates form state based on input changes\r\n  const handleInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const newValue = type === \"checkbox\" ? (checked ? \"professional\" : \"usuario\") : value;\r\n    setFormState(prevState => ({ ...prevState, [name]: newValue }));\r\n  };\r\n\r\n  // Toggles sign in/sign up mode\r\n  const toggleMode = () => {\r\n    setFormState(prevState => ({\r\n      ...prevState,\r\n      isSignIn: !prevState.isSignIn,\r\n      email: \"\",\r\n      password: \"\",\r\n      nombre: \"\",\r\n      especialidad: \"\",\r\n      tipo: \"usuario\",\r\n      errors: {},\r\n    }));\r\n  };\r\n\r\n  // Renders input fields with error handling\r\n  const renderInputField = (name, placeholder, type = \"text\") => (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={`form-control ${formState.errors[name] ? \"is-invalid\" : \"\"}`}\r\n        placeholder={placeholder}\r\n        value={formState[name]}\r\n        onChange={handleInputChange}\r\n        name={name}\r\n      />\r\n      {formState.errors[name] && <div className=\"error-message\">{formState.errors[name]}</div>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"user-form-area ptb-100\">\r\n      <div className=\"container\">\r\n        <div className=\"user-item\">\r\n          <h2>{formState.isSignIn ? \"Sign In\" : \"Sign Up\"}</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            {!formState.isSignIn && renderInputField(\"nombre\", \"Nombre\")}\r\n            {formState.tipo === \"professional\" && renderInputField(\"especialidad\", \"Especialidad\")}\r\n            {renderInputField(\"email\", \"Email\", \"email\")}\r\n            {renderInputField(\"password\", \"Password\", \"password\")}\r\n            {!formState.isSignIn && (\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formState.tipo === \"professional\"}\r\n                    onChange={handleInputChange}\r\n                    name=\"tipo\"\r\n                  />\r\n                  Register as a professional\r\n                </label>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className=\"btn cmn-btn\" style={{ marginRight: \"10px\" }}>\r\n                {formState.isSignIn ? \"Sign In\" : \"Sign Up\"}\r\n              </button>\r\n              <button type=\"button\" className=\"btn cmn-btn\" onClick={toggleMode}>\r\n                {formState.isSignIn ? \"Need an account? Sign Up\" : \"Have an account? Sign In\"}\r\n              </button>\r\n            </div>\r\n            {formState.errors.form && <div className=\"error-message text-center\">{formState.errors.form}</div>}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,eAAe;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEI;EAAO,CAAC,GAAGH,OAAO,CAAC,CAAC;EAC5B,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE,SAAS;IAAG;IAClBC,MAAM,EAAE,CAAC;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMF,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMG,UAAU,GAAG,4BAA4B;IAE/C,IAAI,CAACD,MAAM,CAACP,KAAK,CAACS,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAACL,KAAK,GAAG,mBAAmB,CAAC,KACxD,IAAI,CAACQ,UAAU,CAACE,IAAI,CAACH,MAAM,CAACP,KAAK,CAACS,IAAI,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAACL,KAAK,GAAG,kBAAkB;IAEjF,IAAI,CAACO,MAAM,CAACN,QAAQ,CAACQ,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAACJ,QAAQ,GAAG,sBAAsB;IACrE,IAAI,CAACM,MAAM,CAACR,QAAQ,EAAE;MACpB,IAAI,CAACQ,MAAM,CAACL,MAAM,CAACO,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAACH,MAAM,GAAG,kBAAkB;MAC7D,IAAIK,MAAM,CAACH,IAAI,KAAK,cAAc,IAAI,CAACG,MAAM,CAACJ,YAAY,CAACM,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAACF,YAAY,GAAG,yCAAyC;IACpI;IAEA,OAAOE,MAAM;EACf,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMR,MAAM,GAAGC,cAAc,CAACT,SAAS,CAAC;IACxC,IAAIiB,MAAM,CAACC,IAAI,CAACV,MAAM,CAAC,CAACW,MAAM,GAAG,CAAC,EAAE;MAClClB,YAAY,CAACmB,SAAS,KAAK;QAAE,GAAGA,SAAS;QAAEZ;MAAO,CAAC,CAAC,CAAC;MACrD;IACF;IAEA,MAAMa,QAAQ,GAAGrB,SAAS,CAACE,QAAQ,GAAG,qDAAqD,GAAG,wDAAwD;IACtJ,MAAMoB,OAAO,GAAGtB,SAAS,CAACE,QAAQ,GAAG;MAAEC,KAAK,EAAEH,SAAS,CAACG,KAAK;MAAEC,QAAQ,EAAEJ,SAAS,CAACI;IAAS,CAAC,GAAG;MAAE,GAAGJ,SAAS;MAAEM,YAAY,EAAEN,SAAS,CAACO,IAAI,KAAK,cAAc,GAAGP,SAAS,CAACM,YAAY,GAAGiB;IAAU,CAAC;IAEtM,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,EAAE;QACrCK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,mBAAmB,CAAC;MACtE,IAAIJ,IAAI,CAACK,KAAK,EAAE;QACdnC,YAAY,CAACmB,SAAS,KAAK;UAAE,GAAGA,SAAS;UAAEZ,MAAM,EAAE;YAAE6B,IAAI,EAAEN,IAAI,CAACI;UAAQ;QAAE,CAAC,CAAC,CAAC;MAC/E,CAAC,MAAM;QACL,IAAInC,SAAS,CAACE,QAAQ,EAAE;UACtBH,MAAM,CAAC;YAAE,GAAGgC,IAAI;YAAEO,QAAQ,EAAEP,IAAI,CAAC1B;UAAO,CAAC,CAAC;UAC1CP,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,MAAM;UACLA,QAAQ,CAAC,GAAG,CAAC;QACf;MACF;IACF,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACdnC,YAAY,CAACmB,SAAS,KAAK;QAAE,GAAGA,SAAS;QAAEZ,MAAM,EAAE;UAAE6B,IAAI,EAAED,KAAK,CAACD;QAAQ;MAAE,CAAC,CAAC,CAAC;IAChF;EACF,CAAC;;EAED;EACA,MAAMI,iBAAiB,GAAIxB,KAAK,IAAK;IACnC,MAAM;MAAEyB,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAG5B,KAAK,CAAC6B,MAAM;IACnD,MAAMC,QAAQ,GAAGH,IAAI,KAAK,UAAU,GAAIC,OAAO,GAAG,cAAc,GAAG,SAAS,GAAIF,KAAK;IACrFxC,YAAY,CAACmB,SAAS,KAAK;MAAE,GAAGA,SAAS;MAAE,CAACoB,IAAI,GAAGK;IAAS,CAAC,CAAC,CAAC;EACjE,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB7C,YAAY,CAACmB,SAAS,KAAK;MACzB,GAAGA,SAAS;MACZlB,QAAQ,EAAE,CAACkB,SAAS,CAAClB,QAAQ;MAC7BC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMuC,gBAAgB,GAAGA,CAACP,IAAI,EAAEQ,WAAW,EAAEN,IAAI,GAAG,MAAM,kBACxDjD,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/D,KAAA,CAAAwD,aAAA;IACEP,IAAI,EAAEA,IAAK;IACXQ,SAAS,EAAG,gBAAelD,SAAS,CAACQ,MAAM,CAACgC,IAAI,CAAC,GAAG,YAAY,GAAG,EAAG,EAAE;IACxEQ,WAAW,EAAEA,WAAY;IACzBP,KAAK,EAAEzC,SAAS,CAACwC,IAAI,CAAE;IACvBiB,QAAQ,EAAElB,iBAAkB;IAC5BC,IAAI,EAAEA,IAAK;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACZ,CAAC,EACDxD,SAAS,CAACQ,MAAM,CAACgC,IAAI,CAAC,iBAAI/C,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAExD,SAAS,CAACQ,MAAM,CAACgC,IAAI,CAAO,CACpF,CACN;EAED,oBACE/C,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC/D,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB/D,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB/D,KAAA,CAAAwD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKxD,SAAS,CAACE,QAAQ,GAAG,SAAS,GAAG,SAAc,CAAC,eACrDT,KAAA,CAAAwD,aAAA;IAAMS,QAAQ,EAAE5C,YAAa;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1B,CAACxD,SAAS,CAACE,QAAQ,IAAI6C,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAC3D/C,SAAS,CAACO,IAAI,KAAK,cAAc,IAAIwC,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC,EACrFA,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,EAC3CA,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EACpD,CAAC/C,SAAS,CAACE,QAAQ,iBAClBT,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/D,KAAA,CAAAwD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/D,KAAA,CAAAwD,aAAA;IACEP,IAAI,EAAC,UAAU;IACfC,OAAO,EAAE3C,SAAS,CAACO,IAAI,KAAK,cAAe;IAC3CkD,QAAQ,EAAElB,iBAAkB;IAC5BC,IAAI,EAAC,MAAM;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACZ,CAAC,8BAEG,CACJ,CACN,eACD/D,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/D,KAAA,CAAAwD,aAAA;IAAQP,IAAI,EAAC,QAAQ;IAACQ,SAAS,EAAC,aAAa;IAACS,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAO,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1ExD,SAAS,CAACE,QAAQ,GAAG,SAAS,GAAG,SAC5B,CAAC,eACTT,KAAA,CAAAwD,aAAA;IAAQP,IAAI,EAAC,QAAQ;IAACQ,SAAS,EAAC,aAAa;IAACW,OAAO,EAAEf,UAAW;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/DxD,SAAS,CAACE,QAAQ,GAAG,0BAA0B,GAAG,0BAC7C,CACL,CAAC,EACLF,SAAS,CAACQ,MAAM,CAAC6B,IAAI,iBAAI5C,KAAA,CAAAwD,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAExD,SAAS,CAACQ,MAAM,CAAC6B,IAAU,CAC7F,CACH,CACF,CACF,CAAC;AAEV,CAAC;AAED,eAAexC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}