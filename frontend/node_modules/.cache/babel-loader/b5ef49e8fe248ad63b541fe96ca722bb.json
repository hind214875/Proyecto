{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Tarea3\\\\frontend\\\\src\\\\components\\\\ServicesSection.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ServiceItem from './ServiceItem';\nconst ServicesSection = () => {\n  const [services, setServices] = useState([]);\n  const {\n    category\n  } = useParams(); // assuming your route is /serviceSection/:category\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await fetch(`http://localhost/Tarea3/backend/src/index.php/services/${category}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setServices(data); // update the state with the fetched data\n      } catch (error) {\n        console.error('Error fetching services:', error);\n      }\n    };\n    fetchServices();\n  }, [category]); // re-run the effect if the category changes\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"service-area three pt-100 pb-70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Our Services\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"We Are Committed To Give Our Best Services\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, services.map((service, index) => /*#__PURE__*/React.createElement(ServiceItem, {\n    key: index,\n    title: service.title,\n    image1: service.image1,\n    image2: service.image2,\n    link: `/services/${service.id}` // Assuming there's a unique ID for each service\n    ,\n    description: service.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default ServicesSection;","map":{"version":3,"names":["React","useState","useEffect","useParams","ServiceItem","ServicesSection","services","setServices","category","fetchServices","response","fetch","ok","Error","data","json","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","service","index","key","title","image1","image2","link","id","description"],"sources":["C:/xampp/htdocs/Tarea3/frontend/src/components/ServicesSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ServiceItem from './ServiceItem';\r\n\r\nconst ServicesSection = () => {\r\n  const [services, setServices] = useState([]);\r\n  const { category } = useParams(); // assuming your route is /serviceSection/:category\r\n\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost/Tarea3/backend/src/index.php/services/${category}`);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setServices(data); // update the state with the fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching services:', error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, [category]); // re-run the effect if the category changes\r\n\r\n  return (\r\n    <section className=\"service-area three pt-100 pb-70\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <span className=\"sub-title\">Our Services</span>\r\n          <h2>We Are Committed To Give Our Best Services</h2>\r\n        </div>\r\n        <div className=\"row\">\r\n          {services.map((service, index) => (\r\n            <ServiceItem\r\n              key={index}\r\n              title={service.title}\r\n              image1={service.image1}\r\n              image2={service.image2}\r\n              link={`/services/${service.id}`} // Assuming there's a unique ID for each service\r\n              description={service.description}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Pagination - placeholder for now */}\r\n      {/* ... */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ServicesSection;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEO;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0DAAyDH,QAAS,EAAC,CAAC;QAClG,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCR,WAAW,CAACO,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACER,KAAA,CAAAkB,aAAA;IAASC,SAAS,EAAC,iCAAiC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClDzB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBzB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BzB,KAAA,CAAAkB,aAAA;IAAMC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAkB,CAAC,eAC/CzB,KAAA,CAAAkB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4CAA8C,CAC/C,CAAC,eACNzB,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjBnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B5B,KAAA,CAAAkB,aAAA,CAACd,WAAW;IACVyB,GAAG,EAAED,KAAM;IACXE,KAAK,EAAEH,OAAO,CAACG,KAAM;IACrBC,MAAM,EAAEJ,OAAO,CAACI,MAAO;IACvBC,MAAM,EAAEL,OAAO,CAACK,MAAO;IACvBC,IAAI,EAAG,aAAYN,OAAO,CAACO,EAAG,EAAE,CAAC;IAAA;IACjCC,WAAW,EAAER,OAAO,CAACQ,WAAY;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACF,CACE,CACF,CAGE,CAAC;AAEd,CAAC;AAED,eAAepB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}