{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Tarea3\\\\frontend\\\\src\\\\components\\\\AuthForm.js\";\nimport React, { useState } from 'react';\nconst AuthForm = ({\n  userType\n}) => {\n  // States for the form inputs\n  const [isSignIn, setIsSignIn] = useState(true); // Toggle between sign in and sign up\n  const [emailOrPhone, setEmailOrPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here you should handle the sign-in or sign-up logic\n    // This would involve validating the inputs and then sending them to your backend\n    // You will need different logic for sign-in vs. sign-up and client vs. professional\n  };\n\n  // Function to toggle between sign-in and sign-up mode\n  const toggleMode = () => {\n    setIsSignIn(!isSignIn);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, isSignIn ? 'Sign In' : 'Sign Up', \" as \", userType), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, !isSignIn && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Email or Phone\",\n    value: emailOrPhone,\n    onChange: e => setEmailOrPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), !isSignIn && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Confirm Password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, isSignIn ? 'Sign In' : 'Sign Up'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-toggle\",\n    onClick: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, isSignIn ? 'Need an account? Sign Up' : 'Have an account? Sign In')));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","AuthForm","userType","isSignIn","setIsSignIn","emailOrPhone","setEmailOrPhone","password","setPassword","confirmPassword","setConfirmPassword","name","setName","handleSubmit","event","preventDefault","toggleMode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/xampp/htdocs/Tarea3/frontend/src/components/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthForm = ({ userType }) => {\r\n  // States for the form inputs\r\n  const [isSignIn, setIsSignIn] = useState(true); // Toggle between sign in and sign up\r\n  const [emailOrPhone, setEmailOrPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Here you should handle the sign-in or sign-up logic\r\n    // This would involve validating the inputs and then sending them to your backend\r\n    // You will need different logic for sign-in vs. sign-up and client vs. professional\r\n  };\r\n\r\n  // Function to toggle between sign-in and sign-up mode\r\n  const toggleMode = () => {\r\n    setIsSignIn(!isSignIn);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>{isSignIn ? 'Sign In' : 'Sign Up'} as {userType}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {!isSignIn && (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Email or Phone\"\r\n          value={emailOrPhone}\r\n          onChange={(e) => setEmailOrPhone(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {!isSignIn && (\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        )}\r\n        <button type=\"submit\" className=\"btn\">{isSignIn ? 'Sign In' : 'Sign Up'}</button>\r\n        <button type=\"button\" className=\"btn-toggle\" onClick={toggleMode}>\r\n          {isSignIn ? 'Need an account? Sign Up' : 'Have an account? Sign In'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}