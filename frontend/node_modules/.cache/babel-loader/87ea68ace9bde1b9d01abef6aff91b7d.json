{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Tarea3\\\\frontend\\\\src\\\\components\\\\AuthForm.js\";\nconst AuthForm = () => {\n  const navigate = useNavigate();\n  const {\n    signIn\n  } = useAuth();\n  const [isSignIn, setIsSignIn] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nombre, setNombre] = useState(\"\");\n  const [especialidad, setEspecialidad] = useState(\"\");\n  const [tipo, setTipo] = useState(\"user\");\n  const [errorMessages, setErrorMessages] = useState({});\n\n  // Clears the error messages when the form type is toggled\n  const clearErrors = () => setErrorMessages({});\n  const validateForm = () => {\n    let isValid = true;\n    let errors = {};\n    if (!email) {\n      isValid = false;\n      errors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      isValid = false;\n      errors.email = \"Email is invalid\";\n    }\n    if (!password) {\n      isValid = false;\n      errors.password = \"Password is required\";\n    }\n    if (!isSignIn) {\n      if (!nombre) {\n        isValid = false;\n        errors.nombre = \"Name is required\";\n      }\n      if (tipo === \"professional\" && !especialidad) {\n        isValid = false;\n        errors.especialidad = \"Specialty is required for professionals\";\n      }\n    }\n    setErrorMessages(errors);\n    return isValid;\n  };\n  const postCredentials = async (endpoint, credentials) => {\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      return response.json();\n    } catch (error) {\n      console.error(\"There was an error!\", error);\n    }\n  };\n  const handleLogin = async () => {\n    const endpoint = \"http://localhost/Tarea3/backend/src/index.php/login\";\n    const data = await postCredentials(endpoint, {\n      email,\n      password\n    });\n    if (data && !data.error) {\n      signIn({\n        ...data,\n        userName: data.nombre\n      });\n      navigate(\"/\");\n    } else {\n      setErrorMessages({\n        form: \"Login failed: \" + data.message\n      });\n    }\n  };\n  const handleRegister = async () => {\n    const endpoint = tipo === \"professional\" ? \"http://localhost/Tarea3/backend/src/index.php/registerProfessional\" : \"http://localhost/Tarea3/backend/src/index.php/register\";\n    const payload = {\n      nombre,\n      email,\n      password,\n      tipo,\n      ...(tipo === \"professional\" && {\n        especialidad\n      })\n    };\n    const data = await postCredentials(endpoint, payload);\n    if (data && !data.error) {\n      navigate(\"/\");\n    } else {\n      setErrorMessages({\n        form: \"Registration failed: \" + data.message\n      });\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    clearErrors();\n    if (!validateForm()) {\n      return; // Stop the form submission if validation fails\n    }\n    if (isSignIn) {\n      await handleLogin();\n    } else {\n      await handleRegister();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-form-area ptb-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, !isSignIn && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${errorMessages.nombre ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Nombre\",\n    value: nombre,\n    onChange: e => setNombre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }), errorMessages.nombre && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, errorMessages.nombre)), tipo === \"professional\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `form-control ${errorMessages.especialidad ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Especialidad\",\n    value: especialidad,\n    onChange: e => setEspecialidad(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), errorMessages.especialidad && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }\n  }, errorMessages.especialidad))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: `form-control ${errorMessages.email ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), errorMessages.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, errorMessages.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: `form-control ${errorMessages.password ? \"is-invalid\" : \"\"}`,\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }), errorMessages.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, errorMessages.password)), !isSignIn && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: tipo === \"professional\",\n    onChange: toggleTipo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }), \"Register as a professional\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn cmn-btn\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, isSignIn ? \"Sign In\" : \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cmn-btn\",\n    onClick: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, isSignIn ? \"Need an account? Sign Up\" : \"Have an account? Sign In\")), errorMessages.form && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, errorMessages.form)))), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, `\n        .is-invalid {\n          border: 2px solid #dc3545;\n        }\n  \n        .error-message {\n          color: #dc3545;\n          font-size: 0.875em;\n          margin-top: 0.25rem;\n        }\n      `));\n};","map":{"version":3,"names":["AuthForm","navigate","useNavigate","signIn","useAuth","isSignIn","setIsSignIn","useState","email","setEmail","password","setPassword","nombre","setNombre","especialidad","setEspecialidad","tipo","setTipo","errorMessages","setErrorMessages","clearErrors","validateForm","isValid","errors","test","postCredentials","endpoint","credentials","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","error","console","handleLogin","data","userName","form","message","handleRegister","payload","handleSubmit","event","preventDefault","React","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Fragment","type","placeholder","value","onChange","e","target","checked","toggleTipo","style","marginRight","onClick","toggleMode","jsx"],"sources":["C:/xampp/htdocs/Tarea3/frontend/src/components/AuthForm.js"],"sourcesContent":["const AuthForm = () => {\r\n  const navigate = useNavigate();\r\n  const { signIn } = useAuth();\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [especialidad, setEspecialidad] = useState(\"\");\r\n  const [tipo, setTipo] = useState(\"user\");\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  // Clears the error messages when the form type is toggled\r\n  const clearErrors = () => setErrorMessages({});\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    let errors = {};\r\n\r\n    if (!email) {\r\n      isValid = false;\r\n      errors.email = \"Email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      isValid = false;\r\n      errors.email = \"Email is invalid\";\r\n    }\r\n\r\n    if (!password) {\r\n      isValid = false;\r\n      errors.password = \"Password is required\";\r\n    }\r\n\r\n    if (!isSignIn) {\r\n      if (!nombre) {\r\n        isValid = false;\r\n        errors.nombre = \"Name is required\";\r\n      }\r\n\r\n      if (tipo === \"professional\" && !especialidad) {\r\n        isValid = false;\r\n        errors.especialidad = \"Specialty is required for professionals\";\r\n      }\r\n    }\r\n\r\n    setErrorMessages(errors);\r\n    return isValid;\r\n  };\r\n\r\n  const postCredentials = async (endpoint, credentials) => {\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      if (!response.ok)\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const endpoint = \"http://localhost/Tarea3/backend/src/index.php/login\";\r\n    const data = await postCredentials(endpoint, { email, password });\r\n\r\n    if (data && !data.error) {\r\n      signIn({ ...data, userName: data.nombre });\r\n      navigate(\"/\");\r\n    } else {\r\n      setErrorMessages({ form: \"Login failed: \" + data.message });\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    const endpoint =\r\n      tipo === \"professional\"\r\n        ? \"http://localhost/Tarea3/backend/src/index.php/registerProfessional\"\r\n        : \"http://localhost/Tarea3/backend/src/index.php/register\";\r\n\r\n    const payload = {\r\n      nombre,\r\n      email,\r\n      password,\r\n      tipo,\r\n      ...(tipo === \"professional\" && { especialidad }),\r\n    };\r\n\r\n    const data = await postCredentials(endpoint, payload);\r\n\r\n    if (data && !data.error) {\r\n      navigate(\"/\");\r\n    } else {\r\n      setErrorMessages({ form: \"Registration failed: \" + data.message });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    clearErrors();\r\n\r\n    if (!validateForm()) {\r\n      return; // Stop the form submission if validation fails\r\n    }\r\n\r\n    if (isSignIn) {\r\n      await handleLogin();\r\n    } else {\r\n      await handleRegister();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"user-form-area ptb-100\">\r\n      <div className=\"container\">\r\n        <div className=\"user-item\">\r\n          <h2>{isSignIn ? \"Sign In\" : \"Sign Up\"}</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            {!isSignIn && (\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`form-control ${errorMessages.nombre ? \"is-invalid\" : \"\"}`}\r\n                    placeholder=\"Nombre\"\r\n                    value={nombre}\r\n                    onChange={(e) => setNombre(e.target.value)}\r\n                  />\r\n                  {errorMessages.nombre && (\r\n                    <div className=\"error-message\">{errorMessages.nombre}</div>\r\n                  )}\r\n                </div>\r\n                {tipo === \"professional\" && (\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${errorMessages.especialidad ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Especialidad\"\r\n                      value={especialidad}\r\n                      onChange={(e) => setEspecialidad(e.target.value)}\r\n                    />\r\n                    {errorMessages.especialidad && (\r\n                      <div className=\"error-message\">{errorMessages.especialidad}</div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className={`form-control ${errorMessages.email ? \"is-invalid\" : \"\"}`}\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {errorMessages.email && (\r\n                <div className=\"error-message\">{errorMessages.email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${errorMessages.password ? \"is-invalid\" : \"\"}`}\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {errorMessages.password && (\r\n                <div className=\"error-message\">{errorMessages.password}</div>\r\n              )}\r\n            </div>\r\n            {!isSignIn && (\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={tipo === \"professional\"}\r\n                    onChange={toggleTipo}\r\n                  />\r\n                  Register as a professional\r\n                </label>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn cmn-btn\"\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                {isSignIn ? \"Sign In\" : \"Sign Up\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn cmn-btn\"\r\n                onClick={toggleMode}\r\n              >\r\n                {isSignIn ? \"Need an account? Sign Up\" : \"Have an account? Sign In\"}\r\n              </button>\r\n            </div>\r\n            {errorMessages.form && (\r\n              <div className=\"error-message text-center\">{errorMessages.form}</div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <style jsx>{`\r\n        .is-invalid {\r\n          border: 2px solid #dc3545;\r\n        }\r\n  \r\n        .error-message {\r\n          color: #dc3545;\r\n          font-size: 0.875em;\r\n          margin-top: 0.25rem;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n      };\r\n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}